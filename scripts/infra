#!/bin/bash

set -e

if [[ -n "${CC_DEBUG}" ]]; then
    set -x
fi

DIR="$(dirname "$0")"

TERRAFORM_DIR="${DIR}/../deployment/terraform"

function usage() {
    echo -n \
         "Usage: $(basename "$0")
Execute Terraform subcommands with remote state management.
"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ "${1:-}" = "--help" ]
    then
        usage
    else
        echo "Attempting to deploy application version [${GIT_COMMIT}]..."
        echo "-----------------------------------------------------"
        echo
        if [[ -n "${CC_SETTINGS_BUCKET}" ]] && [[ -n "${CC_SITE_BUCKET}" ]];
        then
            pushd "${TERRAFORM_DIR}"
            aws s3 cp "s3://${CC_SETTINGS_BUCKET}/terraform/terraform.tfvars" "${CC_SETTINGS_BUCKET}.tfvars"

            case "${1}" in
                plan)
                    rm -rf .terraform terraform.tfstate*

                    terraform init \
                      -backend-config="bucket=${CC_SETTINGS_BUCKET}" \
                      -backend-config="key=terraform/state"

                    terraform plan \
                              -var-file="${CC_SETTINGS_BUCKET}.tfvars" \
                              -out="${CC_SETTINGS_BUCKET}.tfplan"
                    aws s3 sync --dryrun --delete ../../dist/_site "s3://${CC_SITE_BUCKET}/"
                    ;;
                apply)
                    terraform apply "${CC_SETTINGS_BUCKET}.tfplan"
                    aws s3 sync --delete ../../dist/_site "s3://${CC_SITE_BUCKET}/"
                    ;;
                *)
                    echo "ERROR: I don't have support for that Terraform subcommand!"
                    exit 1
                    ;;
            esac

            popd

        else
            echo "ERROR: CC_SETTINGS_BUCKET is undefined."
            exit 1
        fi
    fi
fi
